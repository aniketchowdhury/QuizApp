{"version":3,"sources":["Result.js","Quiz.js","apiCalls.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","padding","backgroundColor","resultContainer","display","flexDirection","alignItems","resultDiv","marginBottom","fontFamily","resetButton","borderRadius","Result","props","classes","count","getbackToQuiz","className","Card","CardContent","Typography","variant","IconButton","onClick","color","minWidth","paperCss","height","questionContainer","buttonContainer","button","marginLeft","questionCard","margin","timerStyle","colorCorrectAnswer","colorWrongAnswer","Quiz","questions","gobacktoHome","useState","counter","setCounter","correct","setCorrect","seconds","setSeconds","answerText","setAnswerText","completedQuiz","setCompletedQuiz","useEffect","_","isEmpty","interval","setInterval","second","clearInterval","isEqual","handleClick","value","correct_answer","setTimeout","Paper","elevation","question","Button","disabled","Snackbar","autoHideDuration","open","anchorOrigin","vertical","horizontal","getQuestions","choice","a","API","requestOptions","method","fetch","results","ok","json","then","res","theme","formControl","spacing","top","selectEmpty","marginTop","errorText","App","setChoice","responseCode","setResponseCode","setQuestions","questionSet","response_code","console","log","fetchRequest","style","isNull","isUndefined","FormControl","Select","onChange","event","target","MenuItem","verticalAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80f95a37.chunk.js","sourcesContent":["import {React} from \"react\";\r\nimport {Card, CardContent, IconButton, makeStyles, Typography} from \"@material-ui/core\";\r\nimport Replay from \"@material-ui/icons/Replay\";\r\n\r\nconst useStyles= makeStyles({\r\n    root:{\r\n        width:\"60%\",\r\n        padding:\"30px\",\r\n        backgroundColor: \"#DEDEDE\"\r\n    },\r\n    resultContainer:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"center\"\r\n    },\r\n    resultDiv: {\r\n        marginBottom: \"30px\",\r\n        fontFamily:\"Roboto-Mono, monospace\"\r\n    },\r\n    resetButton: {\r\n        \"&.MuiIconButton-root\":{\r\n            borderRadius: \"unset\"\r\n        }\r\n    }\r\n})\r\nfunction Result(props)\r\n{\r\n    const classes = useStyles();\r\n    const {count,getbackToQuiz} = props;\r\n    const handleClick=()=>{\r\n        getbackToQuiz();\r\n    }\r\n    return(\r\n        <div className={classes.resultContainer}>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n            <Typography variant=\"h5\" className={classes.resultDiv}>Your Result-Correct Answers::{count}</Typography>\r\n            <IconButton className={classes.resetButton} onClick={handleClick} color=\"primary\">RESET<Replay /></IconButton>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default Result;\r\n","import {React, useEffect, useState} from \"react\";\r\nimport { Button, makeStyles, Paper, Snackbar, Typography } from \"@material-ui/core\";\r\nimport _ from \"underscore\";\r\nimport Result from \"./Result\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: \"40%\",\r\n  },\r\n  paperCss: {\r\n    width: \"60%\",\r\n    height: \"300px\"\r\n  },\r\n  questionContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\"\r\n  },\r\n  buttonContainer:{\r\n    display:\"flex\",\r\n    padding:\"10px 10px\"\r\n  },\r\n  button:{\r\n    marginLeft:\"auto\"\r\n  },\r\n  questionCard:{\r\n    padding:\"20px\",\r\n    margin:\"25px 0px\",\r\n    height: \"100px\"\r\n  },\r\n  timerStyle: {\r\n    fontFamily:\"Roboto-Mono, monospace\"\r\n  },\r\n  colorCorrectAnswer:{\r\n    backgroundColor: \"#92F7BA\",\r\n    padding: \"15px\",\r\n    borderRadius: \"7px\",\r\n    color: \"#474747\"\r\n  },\r\n  colorWrongAnswer: {\r\n    backgroundColor: \"#FF7A7A\",\r\n    padding: \"15px\",\r\n    borderRadius: \"7px\",\r\n    color: \"#474747\"\r\n  }\r\n})\r\n\r\nfunction Quiz(props){\r\n  const classes = useStyles();\r\nconst {questions, gobacktoHome}=props;\r\nconst [counter, setCounter] = useState(0);\r\nconst [correct, setCorrect] = useState(0);\r\nconst [seconds, setSeconds] = useState(10);\r\nconst [answerText, setAnswerText] = useState('');\r\nconst [completedQuiz, setCompletedQuiz] = useState(false);\r\nconst vertical='bottom';const horizontal='center';\r\n  useEffect(() => {\r\n    if(counter<11 && _.isEmpty(answerText))  {\r\n    const interval = setInterval(() => {\r\n      setSeconds(second => (second === 1 ? 10 : second - 1));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n    }\r\n    \r\n  }, [counter,questions,answerText]);\r\n\r\n  useEffect(()=>{\r\n    if(_.isEqual(seconds,10)) \r\n    setCounter(counter=>counter+1);\r\n  },[seconds]);\r\n\r\n  useEffect(()=>{\r\n    if(counter===11)\r\n    {\r\n      setCounter(0);\r\n      setCompletedQuiz(true);\r\n    }\r\n  },[counter, gobacktoHome]);\r\n\r\n  const handleClick=(value)=>{\r\n    if(_.isEqual(value,questions[counter-1].correct_answer))\r\n    {\r\n      setCorrect(correct=>correct+1);\r\n      setAnswerText('Correct');\r\n    }\r\n    if(!_.isEqual(value,questions[counter-1].correct_answer)) setAnswerText('Wrong');\r\n    setTimeout(()=>{\r\n    setSeconds(10);\r\n    setAnswerText('');\r\n    },3000);\r\n  }\r\n\r\n  const goBack=()=>{\r\n    setCompletedQuiz(false);\r\n    gobacktoHome();\r\n  }\r\n\r\n    return(\r\n        <div>\r\n            {!completedQuiz &&( \r\n            <div className={classes.questionContainer}>\r\n              <Paper elevation={5} className={classes.paperCss}>\r\n                <div className={classes.buttonContainer}>\r\n            <Typography variant=\"h6\" className={classes.timerStyle}>Timer: {seconds}</Typography>\r\n            <Typography variant=\"h6\" className={`${classes.button} ${classes.timerStyle}`}>Question no:: {counter}</Typography>\r\n            </div>\r\n            {questions[counter-1] && (\r\n              <div className={classes.questionCard}>\r\n            <Typography variant=\"h5\">{questions[counter-1].question}</Typography>\r\n            </div>\r\n            )}\r\n            <div className={classes.buttonContainer}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={()=>handleClick('True')} disabled={!_.isEmpty(answerText)}>TRUE</Button>\r\n            <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={()=>handleClick('False')} disabled={!_.isEmpty(answerText)}>FALSE</Button>\r\n            </div>\r\n            </Paper>\r\n            {answerText && \r\n            <Snackbar \r\n              autoHideDuration={3000}\r\n              open={!_.isEmpty(answerText)}\r\n              anchorOrigin={{vertical, horizontal}}>\r\n              <div className={_.isEqual(answerText,'Correct')?\r\n                classes.colorCorrectAnswer:\r\n                classes.colorWrongAnswer}>\r\n                  <Typography variant=\"h6\" className={classes.timerStyle}>{_.isEqual(answerText,'Correct')?answerText:`${answerText}----Correct Answer:${questions[counter-1].correct_answer}`}</Typography></div>\r\n              </Snackbar>}\r\n            </div>\r\n            )}\r\n            {completedQuiz && <Result count={correct} getbackToQuiz={goBack}/>}\r\n        </div>\r\n    )\r\n}\r\nexport default Quiz;\r\n","export const getQuestions=async(choice)=>{\r\n    const API = `https://opentdb.com/api.php?amount=10&category=18&difficulty=`+choice+`&type=boolean`;\r\n    const requestOptions={\r\n        method: \"GET\"\r\n    }\r\n    const results = await fetch(API,requestOptions);\r\n    if(results.ok){\r\n        return results.json().then(res=>{\r\n            return res;\r\n        })\r\n    }\r\n\r\n}\r\n","import './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormControl, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { useEffect, useState } from 'react';\r\nimport Quiz from './Quiz';\r\nimport { getQuestions } from './apiCalls';\r\nimport _ from 'underscore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 520,\r\n    top:\"50px\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  errorText:{\r\n    marginTop: \"60px\",\r\n    color: \"#EB0909\"\r\n  }\r\n}));\r\nfunction App() {\r\n  const classes= useStyles();\r\n  const [choice, setChoice] = useState('');\r\n  const [responseCode, setResponseCode] = useState(null);\r\n  const [questions, setQuestions] = useState(null);\r\n  useEffect(()=>{\r\n    console.log(\"choice==\",choice);\r\n    async function fetchRequest(){\r\n      const questionSet = await getQuestions(choice);\r\n      if(questionSet)\r\n      {\r\n        setQuestions(questionSet.results);\r\n        setResponseCode(questionSet.response_code)\r\n      }\r\n    }\r\n    !_.isEmpty(choice) && fetchRequest();\r\n  }, [choice]); \r\n\r\n  function handleChange(event){\r\n    setChoice(event.target.value);\r\n  }\r\n  const gobacktoHome=()=>{\r\n    setChoice('');\r\n    setQuestions(null);\r\n    setResponseCode(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Typography variant=\"h3\" style={{margin:\"50px\"}}>Quiz-Application</Typography>\r\n        {(_.isNull(questions)||_.isUndefined(questions) || _.isEqual(responseCode,1))&&(\r\n          <div>\r\n        <Typography variant=\"h4\">To start quiz lease select difficulty level</Typography>\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            value={choice}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={'easy'}>Easy</MenuItem>\r\n            <MenuItem value={'medium'}>Medium</MenuItem>\r\n            <MenuItem value={'hard'}>Difficult</MenuItem>\r\n          </Select>\r\n        </FormControl></div>\r\n        )}\r\n      </header>\r\n      {\r\n        _.isEqual(responseCode,0) &&<Quiz questions={questions} gobacktoHome={gobacktoHome} />\r\n      }\r\n        { _.isEqual(responseCode,1) &&<div className={classes.errorText}>\r\n          <WarningIcon style={{verticalAlign: \"sub\"}} />\r\n          Oops!! Seems there was a problem in loading the questions. Please try again\r\n          </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}